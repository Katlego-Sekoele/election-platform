/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/5MPIXwutEgx
 */
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { CardContent, Card } from "@/components/ui/card";
import { useState } from "react";
import { toast, useToast } from "@/components/ui/use-toast";

export function AuthenticationForm(props) {
	const { onSignInClick, onSignUpClick } = props;

	const [email, setEmail] = useState("");
	const [password, setPassword] = useState("");
	const [confirmPassword, setConfirmPassword] = useState("");
	const [signUp, setSignUp] = useState(false);

	function validateForm() {
		if (signUp && password !== confirmPassword) {
			toast({
				variant: "destructive",
				description: "Passwords do not match",
			});
		} else if (!email || !password) {
			toast({
				variant: "destructive",
				description: "All fields must be filled in",
			});
		} else {
			if (signUp) {
				onSignUpClick({ email, password });
			} else {
				onSignInClick({ email, password });
			}
			return true;
		}
	}

	return (
		<Card className="w-full max-w-md mx-auto overflow-hidden">
			<CardContent className="p-6">
				<div className="flex justify-center">
					<div className="flex items-center space-x-2">
						<ActivityIcon className="w-6 h-6" />
						<div className="text-2xl font-bold">
							Election Platform
						</div>
					</div>
				</div>
				<div className="mt-6 text-lg text-center">
					Sign in to your account
				</div>
				<div className="mt-6 space-y-4">
					<div className="space-y-2">
						<Label htmlFor="email">Email</Label>
						<Input
							id="email"
							placeholder="m@example.com"
							required
							type="email"
							onChange={(e) => setEmail(e.target.value)}
						/>
					</div>
					<div className="space-y-2">
						<Label htmlFor="password">Password</Label>
						<Input
							id="password"
							required
							type="password"
							onChange={(e) => setPassword(e.target.value)}
						/>
					</div>
					{signUp && (
						<div className="space-y-2">
							<Label htmlFor="confirm-password">
								Confirm password
							</Label>
							<Input
								id="confirm-password"
								required
								type="password"
								onChange={(e) =>
									setConfirmPassword(e.target.value)
								}
							/>
						</div>
					)}
					<Button
						className="w-full"
						type="submit"
						onClick={() => validateForm()}
					>
						{signUp ? "Sign up" : "Sign in"}
					</Button>
					<div
						style={{
							display: "flex",
							justifyContent: "space-between",
						}}
					>
						<a
							style={{
								textDecoration: "underline",
							}}
							onClick={() => setSignUp(!signUp)}
						>
							{signUp
								? "Already have an account? Sign in"
								: "Don't have an account? Sign up"}
						</a>
					</div>
				</div>
			</CardContent>
		</Card>
	);
}

function ActivityIcon(props) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<path d="M22 12h-4l-3 9L9 3l-3 9H2" />
		</svg>
	);
}
